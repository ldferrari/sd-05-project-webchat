<!DOCTYPE html>
<html lang="pt-br">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Project 32 - Webchat || Bate papo UOL é você?</title>
  <link rel="stylesheet" href="style.css" />
</head>

<body>
  <!-- <form> -->
  <!-- <%getAllMessages.forEach((onlineUsers) => {%>

    <%=onlineUsers.nome%> - <%=onlineUsers.sala%>
    <li data-testid="message"><%=onlineUsers.timestamp%> - <%= onlineUsers.nickname%>: <%=onlineUsers.chatMessage%></li>
    <!<%})%> -->
  <!-- </form> -->
  <div>
    <input data-testid="nickname-box" id="nickname-box" />
    <button data-testid="nickname-save" id="nickname-save">SALVAR NOME</button>
    <ul id='list-new-user'>
      <li id='change-name' data-testid="online-user">
        Guest<%=numeros%>
      </li>
      <%Object.values(onlineUsers).forEach((user) =>{%>
      <li id=<%=user.socketId%> data-testid="online-user"><%=user.nickname%></li>
      <%})%>
    </ul>
  </div>
  <div>
    <input data-testid="message-box" id="message-box" />
    <button data-testid="message-send-button" id="message-send-button">ENVIAR MENSAGEM</button>
  </div>
  <!-- <div>
    <button data-testid="private" id="private" type="button">Private</button>
    <button data-testid="public" id="public" type="button">Public</button>
  </div> -->
  <ul id='chat-box'>

  </ul>
  <h1>funcionando</h1>
  <script type="text/javascript">
  </script>
</body>
<script src="http://localhost:3000/socket.io/socket.io.js"></script>
<Script>
  const socket = io('http://localhost:3000');
  const messageBox = document.getElementById('message-box');
  const messageSendButton = document.getElementById('message-send-button');
  const chatBox = document.getElementById('chat-box');
  const changeName = document.getElementById('change-name');
  const saveName = document.getElementById('nickname-save');
  const saveNameBox = document.getElementById('nickname-box');
  const newListWithUser = document.getElementById('list-new-user');
  // button PUBLIC e PRIVATE -----------------------------------
  // const buttonPublic = document.getElementById('public');
  // const buttonPrivate = document.getElementById('private');
  // target.previousSibling. possivel possibilidade button private
  // is that previousSibling returns the previous sibling node as an element node, a text node or a comment node
  // ------------------------------------------------------------

  const myData = {
    nickname: 'Guest' + '<%=numeros%>', socketId: socket.id
  };
  // novo usuarios que loga aparece para os demais
  socket.emit('newUserConectando', { myData });

  saveName.addEventListener('click', () => {
    changeName.innerHTML = saveNameBox.value
    myData.nickname = saveNameBox.value
    myData.socketId = socket.id
    socket.emit('displayName', { myData })
  });

  messageSendButton.addEventListener('click', () => {
    messageBox.value
    socket.emit('message', { chat: messageBox.value })
  });
  socket.on('updateMessage', ({ chat }) => {
    const message = document.createElement('li')
    message.innerHTML = chat;
    message.setAttribute('data-testid', 'message');
    chatBox.appendChild(message)
    console.log(chat);
  });
  socket.on('updateUsers', ({ onlineUsers }) => {
    newListWithUser.innerHTML = '';
    const myUser = document.createElement('li');
    myUser.innerHTML = myData.nickname;
    myUser.id = "change-name";
    myUser.setAttribute('data-testid', 'online-user');
    newListWithUser.appendChild(myUser);
    Object.values(onlineUsers).forEach(user => {
      if (user.socketId === socket.id) return
      const newUser = document.createElement('li')
      newUser.innerHTML = user.nickname;
      newUser.setAttribute('data-testid', 'online-user');
      newListWithUser.appendChild(newUser);
    });
  })
</Script>

</html>