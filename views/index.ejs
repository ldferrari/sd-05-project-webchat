<!DOCTYPE html>
<html>
  <head>
    <title>WebChat</title>
    <link rel="stylesheet" type="text/css" href="style.css" />
  </head>
  <body>
    <header class="header">WEB Chat bombando</header>
    <form class="inputs">
      <div action="" class="input-text">
        <input id="inputText" type="text" data-testid="message-box" />
        <button id="buttonText" type="button" data-testid="send-button">Enviar</button>
      </div>
      <div class="user-area">
        <div action="">
          <input id="inputNickname" type="text" data-testid="nickname-box" />
          <button id="buttonNickName" type="button" data-testid="nickname-save">
            NickName
          </button>
        </div>
          <ul id="listUsers">
            <% if(allUsers) { %>
              <% allUsers.forEach(({nickname})=> { %>
                <li data-testid="online-user"><%= nickname %></li>
              <%})%>
            <% } %>
          </ul>
      </div>
    </form>
    <div>

      <ul id="chat">
        <% if(allMessages) { %>
          <% allMessages.forEach(({message:oldMessage})=> { %>
            <% const breakingMsg = new RegExp('(.*)-(.*):(.*)'); %> 
            <% const parts = oldMessage.match(breakingMsg); %>
            <li data-testid="message">
              <span class="chatTime"><%=parts[1]%> -</span>
              <span class="chatUser"><%=parts[2]%></span>:
              <span class="chatMessage"><%=parts[3]%></span>
            </li>
            <%})%>
          <% } %>
        </ul>
      </div>
  </body>
  <script src="http://localhost:3000/socket.io/socket.io.js"></script>
  <script src="https://code.jquery.com/jquery-3.5.0.js"></script>
  <script>
    // const singleData = (min = 0, max = 100) => min + max * Math.random();
    // const colorGenerator = () => [singleData(), singleData(), singleData()];
    // const personalColor = colorGenerator();

    const socket = io('http://localhost:3000');
    const randomNuber = '<%= rand %>';
    let nickname = `Quest ${randomNuber}`;
    socket.emit('newUser', { nickname });

    const appendItem = (destiny, item, dataTestId) => {
      console.log(item)
      const chat = document.getElementById(destiny);
      let teste;
      // usei jquerry pq estava dificil colocar o data-testid =D
      // https://api.jquery.com/jquery/message
      if (destiny === 'chat') {
        const breakingMsg = new RegExp('(.*)-(.*):(.*)');
        const parts = item.match(breakingMsg);
        teste = $(
          `<li data-testid="${dataTestId}" ><span class="chatTime">${parts[1]} -</span> <span class="chatUser">${parts[2]}</span>: <span class="chatMessage">${parts[3]}</span></li>`,
        );
      } else {
        teste = $(`<li data-testid="${dataTestId}">${item}</li>`);
      }
      chat.appendChild(teste[0]);
    };

    const buttonNickname = document.getElementById('buttonNickName');
    buttonNickname.addEventListener('click', () => {
      const temp = document.getElementById('inputNickname').value;
      if (!temp) return false;
      nickname = temp;
      socket.emit('nicknameChanged', { nickname, id: socket.id });
    });

    socket.on('oldMessages', (oldMessages) => {
      oldMessages.forEach(({ message }) => {
        appendItem('chat', message, 'message');
      });
    });

    socket.on('message', (newMessage) => appendItem('chat', newMessage, 'message'));

    const buttonText = document.getElementById('buttonText');

    function textClickAction(e) {
      // e.preventDefault();
      const chatMessage = document.getElementById('inputText');
      if (!chatMessage.value) return false;
      socket.emit('message', { chatMessage: chatMessage.value, nickname });
      chatMessage.value = '';
      chatMessage.focus();
    }

    buttonText.addEventListener('click', textClickAction);
    document.getElementById('inputText').addEventListener('keyup', (event) => {
      if (event.keyCode == 13) {
        textClickAction();
      }
    });

    socket.on('UpdateUsers', ({ users }) => {
      const me = users.find((e) => e.id === socket.id);
      const others = users.filter((e) => e.id !== socket.id);
      const newOrder = [me, ...others];
      document.getElementById('listUsers').innerHTML = '';
      newOrder.forEach((e) => appendItem('listUsers', e.nickname, 'online-user'));
    });
  </script>
</html>
